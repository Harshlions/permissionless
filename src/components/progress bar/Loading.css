
.container{
    position: relative;
    height: 55rem;
    width: 90rem;
    background-color:  #000;
    top: -10rem;
    overflow: hidden;

}

.barr {
    position: relative;
    height: 100%;
    width: 100%;
    background-color:  #A9FF1C;
    animation-name: LeftToRight;
    animation-duration: 10s;
    animation-iteration-count: 1;
}

.container h1 {
    
    width: 500px;
    height: 19px;
    left: 20rem;
    top: 30rem;
    font-style: normal;
    font-weight: 400;
    font-size: 32px;
    line-height: 19px;
    background-color: transparent;
    color: #fff;
    z-index: 1;
    mix-blend-mode: exclusion;
    /* Inside auto layout */

    flex: none;
    order: 0;
    flex-grow: 0;

}

.container svg {
    top: 27rem;
    left: 11rem;
    mix-blend-mode: exclusion ;
    z-index: 3;
    

}

@keyframes LeftToRight {

from{
    width: 0%;
    

}

to{
     width: 100%; 
}

}

@property --num {
    syntax: "<integer>";
    initial-value: 100;
    inherits: false;
}
  .counter {
    animation: counter 10s alternate ease-in-out;
    counter-reset: num var(--num);
    position: absolute;
    width: 146px;
    height: 213px;
    left: 1193px;
    top: 580.26px;
    background-color: transparent;
    mix-blend-mode: exclusion;

    /* Head */

    
    
    font-weight: 700;
    font-size: 153px;
    line-height: 213px;
    letter-spacing: -0.07em;
    text-transform: uppercase;

    color: #FFFFFF;

}
  
  .counter::after {
    content: counter(num);
  }
  
  @keyframes counter {
    from {
      --num: 0 ;
    }
    to {
      --num: 100 ;
    }
  }

  @media only screen and (max-width: 600px) {

    .container {
      height: 66rem;
      width: 26rem;
    }

    .container h1 {
      left: 1rem;
      width: 25rem;
      font-size: 1.6rem;
    }

    .container svg 
    {
      top: 35rem;
      left: .1rem;
      height: 6rem;
    }

    .barr {
      animation-duration: 5s;
    }

    .counter {
      left: 100rem;
      width: 50px;
      height: 100px;
      
    }

  }
